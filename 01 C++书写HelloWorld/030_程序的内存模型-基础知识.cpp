/*
一、内存分区模型

C++程序执行时，将内存划分为4个区域
    - 代码区：存放 函数体的二进制代码，由 操作系统 进行管理
    - 全局区：存放 全局变量 和 静态变量 以及 常量
    - 栈区：由 编译器 自动分配释放，存放 函数的参数值，局部变量等
    - 堆区：由 程序员 分配和释放，若程序员不释放，程序结束时由 操作系统 回收


内存四区意义:
    不同区域存放的数据，赋予不同的生命周期，给我们更大的灵活编程


1.1 程序运行前
    在程序编译后，生成了 exe 可执行程序，《未执行该程序前》分为两个区域

    代码区:
        存放CPU执行的机器指令
        代码区是《共享》的，共享的目的是对于频繁被执行的程序，只需要在内存中有一份代码即可
        代码区是《只读》的，使其只读的原因是防止程序意外地修改了它的指令

    全局区:
        全局变量 和 静态变量 存放在此
        全局区还包含了 常量区，字符串常量 和 全局常量(const修饰的全局变量) 也存放在此
        该区域的数据在程序结束后由 操作系统 释放


1.2 程序运行后
    栈区:
        由 编译器 自动分配释放，存放 函数的参数值，局部变量等
        注意事项: 不要返回局部变量的地址，栈区 开辟的数据 由 编译器 自动释放

    堆区:
        由 程序员 分配释放，若程序员不释放，程序结束时由操作系统回收
        在C++中主要利用 new 在堆区开辟内存

*/