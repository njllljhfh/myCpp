#include <iostream>
using namespace std;


/*
静态成员就是在成员变量和成员函数前加上关键字 static，称为静态成员。

静态成员分为:
静态成员变量
    所有对象共享同一份数据
    在编译阶段分配内存
    类内声明，类外初始化

静态成员函数
    所有对象共享同一个函数
    静态成员函数只能访问静态成员变量
*/


//========================================= 静态成员函数 =========================================
class Person60
{
public:
    static int mA; //静态成员变量
    int mB; //非静态成员变量

    //1.所有对象共享同一个函数
    //2.静态成员函数只能访问静态成员变量
    static void func()
    {
        mA = 100; // 静态成员函数 可以 访问静态成员变量
        //mB = 200; // 静态成员函数 不可以 访问静态成员变量。因为无法区分到底是哪个具体对象的 mB 属性
        cout << "static void func() 调用" << endl;
    }

private:
    //静态成员函数也是有访问权限的
    static void func2()
    {
        cout << "static void func2() 调用" << endl;
    }
};

int Person60::mA = 0;


void test60_1()
{
    //静态成员函数有两种访问方式
    //1、通过对象访问
    Person60 p1;
    p1.func();
    cout << "*****************" << endl;

    //2、通过类名访问
    Person60::func();
    cout << "*****************" << endl;

    //Person60::func2(); // 类外访问不到私有的静态成员函数
}

int main60() {
    cout << "060-类和对象-对象特性-静态成员函数" << endl;

    test60_1();
    cout << "----------------------------------------------------------------" << endl;

    //system("pause");
    cin.get();
    return 0;
}