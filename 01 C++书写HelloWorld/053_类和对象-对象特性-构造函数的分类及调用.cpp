#include <iostream>
#include <string>
using namespace std;


//构造函数的分类及调用
//分类
//    按照参数分类：无参构造函数（默认构造函数）、有参构造函数
//    按照类型分类：普通构造函数、拷贝构造函数
class Person53
{
public:
	//---------------------普通构造函数---------------------
	//无参构造函数
	Person53()
	{
		cout << "Person53 无参构造函数（默认构造函数）的调用" << endl;
	}

	//有参构造函数
	Person53(int a)
	{
		age = a;
		cout << "Person53 有参构造函数的调用" << endl;
	}

	//---------------------拷贝构造函数---------------------
	Person53(const Person53& p) // 见 040_引用-常亮引用 的讲解
	{
		//将传入的实例上多有的属性，拷贝到新实例上
		cout << "Person53 拷贝构造函数的调用" << endl;
		age = p.age;
	}

	//------------------------析构函数----------------------
	~Person53()
	{
		cout << "Person53 析构函数的调用" << endl;
	}

	int age;

	//构造函数和析构函数都是必须有的实现，如果我们自己不提供，编译器会提供一个空实现的构造函数和析构函数
};

//调用
void test53_1()
{
	cout << "1、括号法：" << endl;
	//1、括号法
	Person53 p1; //默认构造函数的调用
	cout << "*****************" << endl;

	Person53 p2(10); //有参构造函数
	cout << "p2 的年龄：" << p2.age << endl;
	cout << "*****************" << endl;

	Person53 p3(p2); //拷贝构造函数
	cout << "p3 的年龄：" << p3.age << endl;

	//注意事项
	//调用默认构造函数时，不要加()
	//因为下面这行代码，编译器会认为是一个函数的声明，不会认为是创建对象
	//Person53 p4();
	cout << "++++++++++++++++++++++++++++++++++++++++++++" << endl;
	cout << endl;



	//2、显示法
	cout << "2、显示法：" << endl;
	Person53 p5; //默认构造函数的调用
	cout << "*****************" << endl;

	Person53 p6 = Person53(20); //有参构造函数
	cout << "p6 的年龄：" << p6.age << endl;
	cout << "*****************" << endl;

	Person53 p7 = Person53(p6); //拷贝构造函数
	cout << "p7 的年龄：" << p7.age << endl;

	cout << "*****************" << endl;
	cout << "匿名对象：" << endl;
	Person53(20); //匿名对象，特点：当前行执行结束后，系统会立即回收掉匿名对象
	cout << "666" << endl;
	//注意事项
	//不要利用 拷贝构造函数 初始化 匿名对象，编译器会认为  Person53(p6);  等价于  Person53 p6;，即编译器会认为是对象声明
	//Person53(p6); //报错，p6重定义
	cout << "++++++++++++++++++++++++++++++++++++++++++++" << endl;
	cout << endl;



	//3、隐式转换法
	cout << "3、隐式转换法：" << endl;
	Person53 p8 = 10;  //相当于写了 Person53 p8 = Person53(10);   有参构造函数
	cout << "*****************" << endl;

	Person53 p9 = p8;  //相当于写了 Person53 p9 = Person53(p8);   拷贝构造函数
	cout << "++++++++++++++++++++++++++++++++++++++++++++" << endl;
	cout << endl;
}


int main() {
	cout << "053_类和对象-对象特性-构造函数的分类和调用" << endl;
	test53_1();
	cout << "----------------------------------------------------------------" << endl;

	//system("pause");
	cin.get();
	return 0;
}
